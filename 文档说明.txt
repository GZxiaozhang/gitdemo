项目框架搭建：
	1.SpringBoot环境搭建
	2.集成Thymeleaf，RespBean
	3.Mybatis
分布式会话：
	1.用户登录
		a.设计数据库
		b.明文密码二次MD5加密
		c.参数检验+全局异常处理
	2.共享Session
		a.SpringSession
		b.Redis
功能开发：
	1.商品列表
	2.商品详情
	3.秒杀
	4..订单详情
系统压测：
	1.JMeter
	2.自定义变量模拟多用户
	3.JMeter命令行的使用
	4.正式压测
		a.商品列表
		b.秒杀
页面缓存：
	1.页面缓存+URL缓存+对象缓存
	2.页面静态化，前后端分离
	3.静态资源优化
	4.CDN优化（CDN优化的原理是将静态资源缓存在距离客户端最近的CDN节点上，用户访问该资源时，直接从缓存中获取资源，避免通过较长的链路回源。 优化CDN缓存命中率的方案包括预热功能和针对具体原因的优化策略。 CDN加速可以加快网页的加载速度，将源站内容分发至靠近用户的加速节点，解决网络拥挤的状况，提高用户访问的响应速度。 引入CDN加速可以优化数据传输路径，避免单一节点压力过高，优化用户的访问路线，提供数据从源站到客户端的传输速度。 当请求大型文件时，CDN会从源检索文件的较小部分，以2MB的区块为单位从源请求文件）

接口优化：
	1.Redis预减库存减少数据库的访问
	2.内存标记减少Redis的访问
	3.RabbitMQ异步下单
		a.SpringBoot整合RabbitMQ
		b.交换机
安全优化：
	1.秒杀接口的地址隐藏
	2.算术验证码
	3.接口防刷
主流的秒杀方案
